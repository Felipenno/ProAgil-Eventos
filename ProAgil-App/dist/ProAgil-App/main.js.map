{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Util/Constants.ts","./src/app/_helps/DateTimeFormatPipe.pipe.ts","./src/app/_models/Evento.ts","./src/app/_services/auth.service.ts","./src/app/_services/evento.service.ts","./src/app/_shared/titulo/titulo.component.ts","./src/app/_shared/titulo/titulo.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.interceptor.ts","./src/app/contatos/contatos.component.ts","./src/app/contatos/contatos.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/eventos/eventoEdit/eventoEdit.component.ts","./src/app/eventos/eventoEdit/eventoEdit.component.html","./src/app/eventos/eventos.component.ts","./src/app/eventos/eventos.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/palestrantes/palestrantes.component.ts","./src/app/palestrantes/palestrantes.component.html","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/registration/registration.component.ts","./src/app/user/registration/registration.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAO,MAAM,SAAS;;AACF,kBAAQ,GAAG,YAAY,CAAC;AACxB,uBAAa,GAAG,GAAG,SAAS,CAAC,QAAQ,SAAS,CAAC;;;;;;;;;;;;;ACFnE;AAAA;AAAA;AAAA;AAAA;AAAoD;AACT;AACG;;AAKvC,MAAM,sBAAuB,SAAQ,wDAAQ;IAElD,SAAS,CAAC,KAAU,EAAE,IAAU;QAC9B,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,yDAAS,CAAC,aAAa,CAAC,CAAC;IACzD,CAAC;;2HAJU,sBAAsB;8HAAtB,sBAAsB;gHAAtB,sBAAsB;6FAAtB,sBAAsB;cAHlC,kDAAI;eAAC;gBACJ,IAAI,EAAE,oBAAoB;aAC3B;;;;;;;;;;;;;;ACFD;AAAA;AAAO,MAAM,MAAM;IAEf,gBAAgB,CAAC;CAapB;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEW;AACjB;;;AAK9B,MAAM,WAAW;IAMtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,YAAO,GAAG,iCAAiC,CAAC;QAC5C,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAGK,CAAC;IAEzC,KAAK,CAAC,KAAU;QACd,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,OAAO,EAAE,KAAK,CAAC,CAAC,IAAI,CACvC,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE;YACpB,MAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,IAAI,IAAI,EAAE;gBACR,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC3D,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;aACnE;QACH,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED,QAAQ,CAAC,KAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,UAAU,EAAE,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,QAAQ;QACN,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;;sEA7BU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,aAAa;IAGxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,kCAAkC,CAAC;IAEL,CAAC;IAEzC,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/C,CAAC;IAED,eAAe,CAAC,IAAY;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,GAAG,IAAI,CAAC,OAAO,cAAc,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,UAAU,CAAC,IAAU,EAAE,IAAY;QACjC,MAAM,YAAY,GAAS,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;QAE5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;IAC/D,CAAC;IAED,YAAY,CAAC,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;;0EAnCU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAyD;;AAOlD,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,qEACE;QAAA,uDACF;QAAA,4DAAK;QACL,gEAAI;;QAFF,0DACF;QADE,uFACF;;6FDKa,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;kBAEE,mDAAK;;;;;;;;;;;;;;AERR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACQ;AACiB;AAEF;AACT;AACH;AACZ;AACQ;AACqB;AACrC;;;AAI9C,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa;QACtC,QAAQ,EAAG;YACT,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,0EAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,+FAAqB,EAAE;SAC3D;KACF;IAED,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAE;IAC1E,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4FAAmB,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAE;IACrF,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAqB,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAE;IACpF,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAE;IAC9E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAE;IAC5E,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE;IACxD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,6BAA6B;CACzF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnCD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,kBAAkB,CAAC;KAC5B;;wEAFY,YAAY;4FAAZ,YAAY;QCNzB,qEAAmB;QAEnB,yEACI;QAAA,2EAA+B;QACnC,4DAAM;;6FDEO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACkC;AACT;AACV;AACF;AACI;AACR;AACF;AAC+B;AACjB;AACrB;AAEM;AACL;AACgC;AAChB;AAEX;AACI;AACY;AACiB;AACF;AACT;AACH;AACE;AACd;AACQ;AACqB;;;;;;;;;AA6C5E,MAAM,SAAS;;wFAAT,SAAS,cAHhB,4DAAY;4IAGL,SAAS,mBAXR;QACR;YACG,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,uEAAe;YACzB,KAAK,EAAE,IAAI;SACb;KACH,YAtBQ;YACN,uEAAa;YACb,6DAAU,CAAC,OAAO,EAAE;YACpB,uDAAa,CAAC,OAAO,EAAE;YACvB,uEAAgB,CAAC,OAAO,EAAE;YAC1B,4EAAkB,CAAC,OAAO,EAAE;YAC5B,mEAAa,CAAC,OAAO,EAAE;YACvB,+DAAW,CAAC,OAAO,EAAE;YACrB,4FAAuB;YACvB,wDAAY,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAC,CAAC;YAClF,6DAAY;YACZ,oEAAgB;YAChB,qEAAgB;YAChB,0DAAW;YACX,kEAAmB;SACrB;mIAYS,SAAS,mBAxChB,sFAAsB;QACtB,4DAAY;QACZ,gEAAY;QACZ,4EAAgB;QAChB,6FAAmB;QACnB,2FAAqB;QACrB,kFAAkB;QAClB,+EAAiB;QACjB,gFAAe;QACf,mEAAa;QACb,2EAAc;QACd,gGAAqB,aAGrB,uEAAa,uZAOb,4FAAuB,4DAEvB,6DAAY;QACZ,oEAAgB;QAChB,qEAAgB;QAChB,0DAAW;QACX,kEAAmB;6FAaZ,SAAS;cA1CrB,sDAAQ;eAAC;gBACP,YAAY,EAAE;oBACX,sFAAsB;oBACtB,4DAAY;oBACZ,gEAAY;oBACZ,4EAAgB;oBAChB,6FAAmB;oBACnB,2FAAqB;oBACrB,kFAAkB;oBAClB,+EAAiB;oBACjB,gFAAe;oBACf,mEAAa;oBACb,2EAAc;oBACd,gGAAqB;iBACvB;gBACD,OAAO,EAAE;oBACN,uEAAa;oBACb,6DAAU,CAAC,OAAO,EAAE;oBACpB,uDAAa,CAAC,OAAO,EAAE;oBACvB,uEAAgB,CAAC,OAAO,EAAE;oBAC1B,4EAAkB,CAAC,OAAO,EAAE;oBAC5B,mEAAa,CAAC,OAAO,EAAE;oBACvB,+DAAW,CAAC,OAAO,EAAE;oBACrB,4FAAuB;oBACvB,wDAAY,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAC,CAAC;oBAClF,6DAAY;oBACZ,oEAAgB;oBAChB,qEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;iBACrB;gBACD,SAAS,EAAE;oBACR;wBACG,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,uEAAe;wBACzB,KAAK,EAAE,IAAI;qBACb;iBACH;gBACD,SAAS,EAAE;oBACR,4DAAY;iBACd;aACH;;;;;;;;;;;;;;ACxED;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,SAAS;IAEpB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,WAAW,CAAC,IAA4B,EAAE,KAA0B;QAClE,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YAC1C,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACtC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kEAXU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2C;;;AAI3C,oDAAoD;AAK7C,MAAM,eAAe;IAExB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,SAAS,CAAC,GAAqB,EAAE,IAAiB;QAC9C,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YACxC,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC;gBACvB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;aACvF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAEhC;aAAM;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;SACnC;IACL,CAAC;;8EAdQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;6FAET,eAAe;cAH3B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,iBAAiB;IAE5B;QADA,WAAM,GAAG,UAAU,CAAC;IACJ,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,2EAA2C;QAC3C,oEACE;QAAA,6EACF;QAAA,4DAAI;;QAHQ,8EAAiB;;6FDOhB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAkD;;AAO3C,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCP/B,yEACE;QAAA,yEAEE;QAAA,yEACI;QAAA,uEACI;QAAA,yEACI;QAAA,qEAAkD;QACtD,4DAAM;QACN,yEACI;QAAA,wEAAkE;QAAA,oEAAS;QAAA,uEAAM;QAAA,8EAAa;QAAA,4DAAO;QAAA,4DAAK;QAC1G,wEAAoD;QAAA,sKAA0G;QAAA,4DAAI;QACtK,4DAAM;QACR,4DAAI;QACV,4DAAM;QACN,0EACI;QAAA,wEACI;QAAA,0EACI;QAAA,sEAAiD;QACrD,4DAAM;QACN,0EACI;QAAA,yEAAkE;QAAA,iEAC9D;QAAA,wEAAM;QAAA,2EAAe;QAAA,4DAAO;QAChC,4DAAK;QACL,wEAAoD;QAAA,oJAAmF;QAAA,4DAAI;QAC7I,4DAAM;QACR,4DAAI;QACZ,4DAAM;QACN,0EACI;QAAA,wEACI;QAAA,0EACI;QAAA,uEAA8C;QAClD,4DAAM;QACN,0EACI;QAAA,yEAAkE;QAAA,4EAC9D;QAAA,wEAAM;QAAA,6EAAiB;QAAA,4DAAO;QAClC,4DAAK;QACL,wEAAoD;QAAA,gJAA0E;QAAA,4DAAI;QACpI,4DAAM;QACR,4DAAI;QACZ,4DAAM;QACN,0EACI;QAAA,wEACI;QAAA,0EACI;QAAA,uEAA+C;QACnD,4DAAM;QACN,0EACI;QAAA,yEAAkE;QAAA,oEAAQ;QAAA,wEAAM;QAAA,0EAAc;QAAA,4DAAO;QAAA,4DAAK;QAC1G,wEAAoD;QAAA,gLAAqG;QAAA,4DAAI;QACjK,4DAAM;QACR,4DAAI;QACV,4DAAM;QACV,4DAAM;QAnDN,4DACE;;6FDMW,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG6B;AAE/B;;;;;;;;;;;;;ICOlC,0EAEE;IAAA,0FACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,sGACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,uGACF;IAAA,4DAAM;;;IAQN,0EAEE;IAAA,2FACF;IAAA,4DAAM;;;IAQN,0EAEE;IAAA,iGACF;IAAA,4DAAM;;;IASN,0EAEE;IAAA,iGACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,mGACF;IAAA,4DAAM;;;IAON,0EAEE;IAAA,8FACF;IAAA,4DAAM;;;IAMN,0EAEE;IAAA,2FACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,4FACF;IAAA,4DAAM;;;;;IAMR,0EACE;IAAA,+EACE;IAAA,6EACE;IAAA,uDAIA;IAAA,6EAAqE;IAAzB,2VAAwB;IAAC,iEAAM;IAAA,4DAAS;IACtF,4DAAS;IACT,yEACE;IAAA,0EACE;IAAA,wEAAO;IAAA,+DAAI;IAAA,4DAAQ;IACnB,wEAGF;IAAA,4DAAM;IACN,2EACE;IAAA,yEAAO;IAAA,sEAAU;IAAA,4DAAQ;IACzB,wEAGF;IAAA,4DAAM;IACN,2EACE;IAAA,yEAAO;IAAA,sEAAK;IAAA,4DAAQ;IACpB,wEAIF;IAAA,4DAAM;IACN,2EACE;IAAA,yEAAO;IAAA,4EAAW;IAAA,4DAAQ;IAC1B,wEACF;IAAA,4DAAM;IACN,2EACE;IAAA,yEAAO;IAAA,oEAAQ;IAAA,4DAAQ;IACvB,wEACF;IAAA,4DAAM;IAER,4DAAM;IACR,4DAAW;IACb,4DAAM;;;;IAvCM,0DAAmB;IAAnB,gFAAmB;IAEzB,0DAIA;IAJA,gLAIA;IAMI,0DAAuF;IAAvF,mOAAuF;IAMvF,0DAAmG;IAAnG,+OAAmG;IAOnG,0DAAyF;IAAzF,qOAAyF;;;;IAqBrG,0EACE;IAAA,+EACE;IAAA,6EACE;IAAA,uDAIA;IAAA,6EAA2E;IAA/B,iWAA8B;IAAC,iEAAM;IAAA,4DAAS;IAC5F,4DAAS;IACT,yEACE;IAAA,0EACE;IAAA,wEAAO;IAAA,+DAAI;IAAA,4DAAQ;IACnB,8EAGE;IAAA,8EAAiB;IAAA,qEAAS;IAAA,4DAAS;IACnC,8EAA+B;IAAA,mEAAO;IAAA,4DAAS;IAC/C,8EAAiC;IAAA,qEAAS;IAAA,4DAAS;IACnD,8EAAgC;IAAA,oEAAQ;IAAA,4DAAS;IACjD,8EAA+B;IAAA,mEAAO;IAAA,4DAAS;IAC/C,8EAA8B;IAAA,kEAAM;IAAA,4DAAS;IAC7C,8EAAgC;IAAA,oEAAQ;IAAA,4DAAS;IACjD,8EAAiC;IAAA,qEAAS;IAAA,4DAAS;IACnD,8EAAgC;IAAA,oEAAQ;IAAA,4DAAS;IACjD,8EAAgC;IAAA,oEAAQ;IAAA,4DAAS;IACjD,8EAA6B;IAAA,iEAAK;IAAA,4DAAS;IAC3C,8EAA6B;IAAA,iEAAK;IAAA,4DAAS;IAC7C,4DAAS;IACX,4DAAM;IACN,0EACE;IAAA,yEAAO;IAAA,gEAAI;IAAA,4DAAQ;IACnB,wEAGF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAW;IACb,4DAAM;;;;IApCM,0DAAmB;IAAnB,gFAAmB;IAEzB,0DAIA;IAJA,6RAIA;IAMI,0DAAqG;IAArG,iPAAqG;IAmBrG,2DAAmG;IAAnG,+OAAmG;;;IAmDzG,wEAEE;IAAA,+DAAqD;IACvD,4DAAI;;;;IAHD,wLAA2C;IAEzC,0DAA6C;IAA7C,yGAA6C;;;ADjNzD,MAAM,mBAAmB;IAmB9B,YACU,aAA4B,EAC1B,EAAe,EACf,aAA8B,EAC9B,MAAqB,EACrB,MAAsB;QAJxB,kBAAa,GAAb,aAAa,CAAe;QAC1B,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAiB;QAC9B,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAgB;QAtBlC,WAAM,GAAG,eAAe,CAAC;QACzB,WAAM,GAAW,IAAI,4DAAM,EAAE,CAAC;QAC9B,cAAS,GAAG,uBAAuB,CAAC;QAKpC,cAAS,GAAG,EAAE,CAAC;QAiBb,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAhBD,IAAI,KAAK;QACP,OAAkB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,YAAY;QACd,OAAkB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC1D,CAAC;IAYD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC;aACvC,SAAS,CACR,CAAC,MAAc,EAAE,EAAE;YACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAEpD,IAAI,CAAC,SAAS,GAAG,0CAA0C,IAAI,CAAC,MAAM,CAAC,SAAS,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;YAEzG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE1C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;QACL,CAAC,CACF,CAAC;IACN,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACpF,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,SAAS,EAAE,CAAC,EAAE,CAAC;YACf,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/D,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YACxB,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,IAAS;QAChB,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YACb,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC;YAC7B,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,UAAe;QAC5B,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC;YACnB,IAAI,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,GAAG,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAED,YAAY,CAAC,MAAW,EAAE,IAAc;QACtC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAEhC,MAAM,CAAC,MAAM,GAAG,CAAC,KAAU,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;QAErE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QAChC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC7E,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE9C,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACjD,GAAG,EAAE;YACH,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QAC9C,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,KAAK,EAAE,CAAC,CAAC;QAChD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE;YACnD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC;iBAC5D,SAAS,CACR,GAAG,EAAE;gBACH,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE,CAAC;gBACzD,IAAI,CAAC,SAAS,GAAG,0CAA0C,IAAI,CAAC,MAAM,CAAC,SAAS,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;YAC3G,CAAC,CACF,CAAC;SACL;IACH,CAAC;;sFA7IU,mBAAmB;mGAAnB,mBAAmB;;QCbhC,2EAA2C;QAC3C,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,wEAAO;QAAA,+DAAI;QAAA,4DAAQ;QACnB,4EAGA;QAHwC,6LAAyB;QAAjE,4DAGA;QAAA,iHAEE;QAEF,iHAEE;QAEF,iHAEE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,6EAEA;QAFwC,8LAA0B;QAAlE,4DAEA;QAAA,iHAEE;QAEJ,4DAAM;QACN,2EACE;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,6EAIA;QAJwC,mMAA+B;;QAAvE,4DAIA;QAAA,iHAEE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,6EAGA;QAHmB,mMAA+B;QAAlD,4DAGA;QAAA,iHAEE;QAEF,iHAEE;QAEJ,4DAAM;QAEN,2EACE;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,6EAEA;QAF+D,iMAA6B;QAA5F,4DAEA;QAAA,iHAEE;QAEJ,4DAAM;QACN,2EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,6EAEA;QAFwC,8LAA0B;QAAlE,4DAEA;QAAA,iHAEE;QAEF,iHAEE;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,uEACE;QAAA,oHACE;QAwCF,8EACE;QADM,4IAAS,mBAAe,IAAC;QAC/B,4EACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,mHACE;QAqCF,8EACE;QADM,4IAAS,yBAAqB,IAAC;QACrC,mFACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAS;QACT,0EACE;QAAA,2EACE;QACA,8EAA+F;QAAzB,4IAAS,kBAAc,IAAC;QAAC,uFACnF;QAAA,4DAAS;QACvB,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,0EACE;QAAA,2EACE;QAAA,iFAEF;QAF2B,mJAAU,6CAAyC,IAAC;QAA7E,4DAEF;QAAA,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,2EAEF;QAF2C,wRAAS,YAAY,IAAC;QAA/D,4DAEF;QAAA,4DAAM;QACN,2EACE;QAAA,sEAAI;QAAA,wDAAe;QAAA,4DAAK;QACxB,yEACE;QAAA,qEAAG;QAAA,kEAAM;QAAA,4DAAI;QAAC,wDACd;QAAA,iEACA;QAAA,qEAAG;QAAA,iEAAK;QAAA,4DAAI;QAAC,wDACf;;QAAA,4DAAI;QACJ,iEACA;QAAA,yEACE;QAAA,qEAAG;QAAA,oEAAQ;QAAA,4DAAI;QAAA,iEACf;QAAA,6EAA0B;QAAA,wDAAwD;;QAAA,4DAAQ;QAC1F,iEACA;QAAA,6EAA0B;QAAA,wDAAwB;QAAA,4DAAQ;QAC5D,4DAAI;QACJ,yEACE;QAAA,yEACA;QAAA,6EAA0B;QAAA,wDAAqB;QAAA,4DAAQ;QACzD,4DAAI;QACJ,0EACE;QAAA,2EACE;QAAA,8GAEE;QAEJ,4DAAM;QAIR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAO;;QAzOK,8EAAiB;QACvB,0DAA0B;QAA1B,uFAA0B;QAQsB,0DAAyB;QAAzB,oFAAyB;QAG5D,0DAC+B;QAD/B,2JAC+B;QAG/B,0DAC6B;QAD7B,4JAC6B;QAG7B,0DAC2B;QAD3B,4JAC2B;QAQQ,0DAA0B;QAA1B,qFAA0B;QAE7D,0DACgC;QADhC,6JACgC;QAOnC,0DAAkD;QAAlD,sKAAkD;QADZ,0FAA+B;QAIlE,0DACmC;QADnC,uKACmC;QAQrB,0DAA+B;QAA/B,0FAA+B;QAG7C,0DACqC;QADrC,uKACqC;QAGrC,0DACmC;QADnC,kKACmC;QAOuB,0DAA6B;QAA7B,wFAA6B;QAEvF,0DACiC;QADjC,mKACiC;QAME,0DAA0B;QAA1B,qFAA0B;QAE7D,0DAC8B;QAD9B,6JAC8B;QAG9B,0DAC4B;QAD5B,0JAC4B;QAQR,0DAAgD;QAAhD,uFAAgD;QA+C3C,0DAA6D;QAA7D,8FAA6D;QA8CvF,0DAAgC;QAAhC,6FAAgC;QAcnC,0DAAiB;QAAjB,2IAAiB;QAIlB,0DAAe;QAAf,gFAAe;QAEH,0DACd;QADc,4FACd;QACa,0DACf;QADe,oKACf;QAI4B,0DAAwD;QAAxD,8LAAwD;QAExD,0DAAwB;QAAxB,kGAAwB;QAIxB,0DAAqB;QAArB,sFAAqB;QAK3C,0DAA8D;QAA9D,8FAA8D;;6FDhNjE,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAIK;AACf;AACH;;;;;;;;;;;;;IC8B1C,qEAEF;;;;IADI,+FAAgC;IADP,yOAAmF;;;IAS9G,sEACE;IAAA,+EACF;IAAA,4DAAM;;;IACN,sEACE;IAAA,uDACF;;IAAA,4DAAM;;;IADJ,0DACF;IADE,qKACF;;;;;IAhBJ,qEACE;IAAA,qEACE;IAAA,2HAEF;IAAA,4DAAK;IACL,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IACxB,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,wDAA0C;;IAAA,4DAAK;IACnD,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,sEACE;IAAA,6HACE;IAEF,6HACE;IAEJ,4DAAK;IACL,sEACE;IAAA,2EACE;IAAA,8EACE;IADsD,gcAAwC;IAC9F,oEAA0B;IAC5B,4DAAS;IACT,8EACE;IADsD,ocAAwC;IAC9F,oEAA4B;IAC9B,4DAAS;IACX,4DAAM;IACR,4DAAK;IACL,sEACE;IAAA,yEACE;IAAA,oEAA0B;IAC5B,4DAAI;IACN,4DAAK;IACP,4DAAK;;;;IA/BI,0DAAqB;IAArB,uFAAqB;IAGxB,0DAAa;IAAb,8EAAa;IACb,0DAAe;IAAf,gFAAe;IACf,0DAAgB;IAAhB,iFAAgB;IAChB,0DAA0C;IAA1C,wJAA0C;IAC1C,0DAAqB;IAArB,sFAAqB;IAElB,0DAA4B;IAA5B,0FAA4B;IAG5B,0DAA2B;IAA3B,yFAA2B;IAe7B,0DAA6C;IAA7C,6JAA6C;;;IA9BtD,wEACE;IAAA,sHACE;IAiCJ,4DAAQ;;;IAlCF,0DAAuC;IAAvC,4FAAuC;;;IAmC7C,wEACE;IAAA,qEACE;IAAA,yEACE;IAAA,qEACE;IAAA,sFACF;IAAA,4DAAK;IACP,4DAAK;IACP,4DAAK;IACP,4DAAQ;;;IAoBI,0EAEE;IAAA,0FACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,sGACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,uGACF;IAAA,4DAAM;;;IAQN,0EAEE;IAAA,2FACF;IAAA,4DAAM;;;IAON,0EAEE;IAAA,iGACF;IAAA,4DAAM;;;IASN,0EAEE;IAAA,iGACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,mGACF;IAAA,4DAAM;;;IAgBN,0EAEE;IAAA,4FACF;IAAA,4DAAM;;;IAQN,0EAEE;IAAA,8FACF;IAAA,4DAAM;;;IAMN,0EAEE;IAAA,2FACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,4FACF;IAAA,4DAAM;;;;ADjLpB,0EAAY,CAAC,OAAO,EAAE,+DAAU,CAAC,CAAC;AAO3B,MAAM,gBAAgB;IAsB3B,YACU,aAA4B,EAC1B,YAA4B,EAC5B,EAAe,EACf,aAA8B,EAC9B,MAAqB;QAJvB,kBAAa,GAAb,aAAa,CAAe;QAC1B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAiB;QAC9B,WAAM,GAAN,MAAM,CAAe;QAzBjC,WAAM,GAAG,SAAS,CAAC;QAKnB,eAAU,GAAG,MAAM,CAAC;QAEpB,kBAAa,GAAG,EAAE,CAAC;QACnB,iBAAY,GAAG,CAAC,CAAC;QACjB,kBAAa,GAAG,KAAK,CAAC;QAEtB,sBAAiB,GAAG,EAAE,CAAC;QAOvB,iBAAY,GAAG,EAAE,CAAC;QAShB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IACD,IAAI,WAAW,CAAC,KAAa;QAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;IAClG,CAAC;IAED,0CAA0C;IAC1C,wCAAwC;IACxC,iDAAiD;IACjD,4CAA4C;IAC5C,mEAAmE;IACnE,QAAQ;IACR,IAAI;IAEJ,mCAAmC;IACnC,wDAAwD;IACxD,sDAAsD;IACtD,iCAAiC;IACjC,+FAA+F;IAC/F,gGAAgG;IAChG,wEAAwE;IACxE,UAAU;IACV,IAAI;IAEJ,YAAY,CAAC,MAAc,EAAE,QAAa;QACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,UAAU,CAAC,QAAa;QACtB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;IAED,aAAa,CAAC,MAAc,EAAE,QAAa;QACzC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,iBAAiB,GAAG,4CAA4C,MAAM,CAAC,IAAI,aAAa,MAAM,CAAC,EAAE,EAAE,CAAC;IAC3G,CAAC;IAED,cAAc,CAAC,QAAa;QAC1B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CACvD,GAAG,EAAE;YACH,QAAQ,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;QAC9C,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,QAAa;QACrB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,QAAQ,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,cAAc,CAAC,UAAkB;QAC/B,UAAU,GAAG,UAAU,CAAC,iBAAiB,EAAE,CAAC;QAC5C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CACxB,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CACrE,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;IAC3C,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACpF,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/D,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;SACrD,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAEhC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE;YACnD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;IACH,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;YAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAEvC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;iBACrD,SAAS,CACR,GAAG,EAAE;gBACH,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE,CAAC;gBACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,CACF,CAAC;SACL;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC;iBAC5D,SAAS,CACR,GAAG,EAAE;gBACH,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE,CAAC;gBACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC,CACF,CAAC;SACL;IACH,CAAC;IAED,eAAe,CAAC,QAAa;QAC3B,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,IAAI,IAAI,CAAC,UAAU,KAAK,MAAM,EAAE;gBAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEzD,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEpB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAClD,CAAC,UAAkB,EAAE,EAAE;oBACrB,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAChB,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC/C,CAAC,EAAE,KAAK,CAAC,EAAE;oBACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB,KAAK,EAAE,CAAC,CAAC;gBACjD,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAE7E,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEpB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CACjD,GAAG,EAAE;oBACH,QAAQ,CAAC,IAAI,EAAE,CAAC;oBAChB,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;gBAC9C,CAAC,EAAE,KAAK,CAAC,EAAE;oBACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB,KAAK,EAAE,CAAC,CAAC;gBAChD,CAAC,CACF,CAAC;aACH;SACF;IACH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE,CAAC;QAEzD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CACzC,CAAC,QAAkB,EAAE,EAAE;YACrB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;YACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,oCAAoC,KAAK,EAAE,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACP,CAAC;;gFA1MU,gBAAgB;gGAAhB,gBAAgB;;QClB7B,2EAA2C;QAC3C,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAAoB;QAAA,kEAAO;QAAA,4DAAQ;QAAC,2EAEtC;QADI,yLAAyB;QADS,4DAEtC;QAAA,4DAAM;QACR,4DAAM;QACN,sEACE;QAAA,4EACE;QADsC,sRAAS,mBAAoB,IAAC;QACpE,kEAAiC;QAAA,+EAEnC;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACN,sEAAI;QAAA,wDAAuB;QAAA,4DAAK;QAChC,4EACE;QAAA,4EACE;QAAA,sEACE;QAAA,sEACE;QAAA,6EACE;QADsC,yIAAS,oBAAgB,IAAC;QAChE,gEAAmE;QACrE,4DAAS;QACX,4DAAK;QACL,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACV,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,0EAAgB;QAAA,4EAAM;QAAA,4DAAK;QAC7B,4DAAK;QACP,4DAAQ;QACR,mHACE;QAmCF,mHACE;QAQJ,4DAAQ;QAER,+EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,0EAA0D;QAAA,uEAAW;QAAA,4DAAK;QAC1E,8EACE;QAD6C,uRAAS,UAAe,IAAC;QACtE,4EAAyB;QAAA,kEAAO;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAM;QACN,2EACE;QAAA,4EACE;QAAA,2EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,gEAAI;QAAA,4DAAQ;QACnB,wEAGA;QAAA,+GAEE;QAEF,+GAEE;QAEF,+GAEE;QAEJ,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,wEAEA;QAAA,+GAEE;QAEJ,4DAAM;QACN,2EACE;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,6EAGA;QAFE,yLAAwB;;QAD1B,4DAGA;QAAA,+GAEE;QAEJ,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAC1B,wEAGA;QAAA,+GAEE;QAEF,+GAEE;QAEJ,4DAAM;QACN,2EACE;QAAA,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,yEACE;QAAA,sEACE;QAAA,sEACE;QAAA,8EACE;QAD8B,wRAAS,YAAY,IAAC;QACpD,2EACF;QAAA,4DAAS;QACT,iFAGF;QAFiC,gJAAU,wBAAoB,IAAC;QAD9D,4DAGF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACR,+GAEE;QAEJ,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,yEAAO;QAAA,oEAAQ;QAAA,4DAAQ;QACvB,wEAEA;QAAA,+GAEE;QAEJ,4DAAM;QACN,2EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,wEAEA;QAAA,+GAEE;QAEF,+GAEE;QAEJ,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QACN,2EACE;QAAA,8EACE;QADgC,uRAAS,UAAe,IAAC;QACzD,oEACF;QAAA,4DAAS;QACT,+EACE;QADuE,wRAAS,wBAAyB,IAAC;QAC1G,0FACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,gFACE;QAAA,4EACE;QAAA,4EACE;QAAA,4EACE;QAAA,2EACE;QAAA,+EACF;QAAA,4DAAK;QACL,+EACE;QAD6C,0RAAS,WAAc,IAAC;QACrE,6EAAyB;QAAA,mEAAO;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAM;QACN,4EACE;QAAA,sEAAG;QAAA,yDAAqB;QAAA,4DAAI;QAC9B,4DAAM;QACN,4EACE;QAAA,+EACE;QADoD,0RAAS,WAAc,IAAC;QAC5E,uEACF;QAAA,4DAAS;QACT,+EACE;QADmD,0RAAS,wBAAuB,IAAC;QACpF,sEACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAtOM,8EAAiB;QAKrB,0DAAyB;QAAzB,oFAAyB;QAU7B,0DAAuB;QAAvB,iGAAuB;QAMd,0DAA2D;QAA3D,6GAA2D;QAY/D,2DAAiC;QAAjC,mGAAiC;QAoCjC,0DAAgB;QAAhB,8EAAgB;QAqBX,2DAA0B;QAA1B,uFAA0B;QAKxB,0DAA+F;QAA/F,wNAA+F;QAE5F,0DAC6B;QAD7B,2JAC6B;QAG7B,0DAC2B;QAD3B,4JAC2B;QAG3B,0DACyB;QADzB,4JACyB;QAQU,0DACV;QADU,0NACV;QACzB,0DACwB;QADxB,6JACwB;QAMwB,0DAA2C;QAA3C,+JAA2C;QAC9F,mFAAwB;QAErB,0DAC2B;QAD3B,uKAC2B;QAQb,0DACc;QADd,oOACc;QAE5B,0DAC2B;QAD3B,uKAC2B;QAG3B,0DACyB;QADzB,kKACyB;QAYC,0DACK;QADL,kOACK;QAK/B,0DACwB;QADxB,qKACwB;QAQW,0DACT;QADS,gOACT;QAC1B,0DACyB;QADzB,mKACyB;QAMU,0DACd;QADc,0NACd;QACrB,0DACoB;QADpB,6JACoB;QAGpB,0DACkB;QADlB,0JACkB;QAWW,0DAAgC;QAAhC,6FAAgC;QAqBrE,2DAAqB;QAArB,sFAAqB;;6FDxMnB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;ICQ9C,yEACE;IAAA,yEACE;IAAA,yEACE;IAAA,wEAAyC;IAAA,kEAAO;IAAA,4DAAI;IACtD,4DAAK;IACL,yEACE;IAAA,wEAA8C;IAAA,uEAAY;IAAA,4DAAI;IAChE,4DAAK;IACL,yEACE;IAAA,wEAA0C;IAAA,oEAAQ;IAAA,4DAAI;IACxD,4DAAK;IACP,4DAAK;IACP,4DAAM;;;;IAQF,0EACE;IAAA,wEACE;IAAA,mEACF;IAAA,4DAAI;IACJ,qEAA4C;IAC5C,wEACE;IADuB,oTAAkB;IACzC,iEACF;IAAA,4DAAI;IACN,4DAAM;;;IAdV,yEACE;IAAA,yEACE;IAAA,wEAEE;IAAA,uDACF;IAAA,4DAAI;IACJ,oHACE;IAQJ,4DAAK;IACP,4DAAK;;;IAZC,0DACF;IADE,6FACF;;;;IAaJ,6EAAuE;IAAnB,uTAAkB;IAAC,iEAAM;IAAA,4DAAS;;;IAxC1F,yEACE;IAAA,yEACE;IAAA,uEAA+C;IAAA,kEAAO;IAAA,4DAAI;IAC1D,4EAEE;IAAA,qEAAyC;IAC3C,4DAAS;IAET,+GACE;IAaF,4GACE;IAiBF,oHAAuE;IAEzE,4DAAM;IACR,4DAAM;;;IAnCG,0DAAkB;IAAlB,mFAAkB;IAcnB,0DAAkB;IAAlB,mFAAkB;IAkBd,0DAAmB;IAAnB,oFAAmB;;AD9BxB,MAAM,YAAY;IAEvB,YAAmB,WAAwB,EAChC,MAAc,EACb,MAAqB;QAFd,gBAAW,GAAX,WAAW,CAAa;QAChC,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtC,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,aAAa,CAAC;IAC3C,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,OAAO,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;;wEA7BU,YAAY;4FAAZ,YAAY;QCVzB,wGACE;;QADuD,gFAAkB;;6FDU9D,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,qBAAqB;IAEhC;QADA,WAAM,GAAG,cAAc,CAAC;IACR,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCPlC,2EAA2C;QAC3C,oEACE;QAAA,iFACF;QAAA,4DAAI;;QAHQ,8EAAiB;;6FDOhB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAU3C,MAAM,cAAc;IAKzB,YAAoB,WAAwB,EACjC,MAAc,EACb,MAAqB;QAFb,gBAAW,GAAX,WAAW,CAAa;QACjC,WAAM,GAAN,MAAM,CAAQ;QACb,WAAM,GAAN,MAAM,CAAe;QALjC,WAAM,GAAG,OAAO,CAAC;QACjB,UAAK,GAAQ,EAAE,CAAC;IAIqB,CAAC;IAEtC,QAAQ;QACN,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACtC;IACH,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;aAC/B,SAAS,CACR,GAAG,EAAE;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC5C,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC7C,CAAC,CACF,CAAC;IACN,CAAC;;4EA1BU,cAAc;8FAAd,cAAc;QCV3B,2EAA2C;QAE3C,0EACE;QAAA,6EACE;QAD4C,0IAAY,WAAO,IAAC;QAChE,oEACA;QAAA,wEAAuC;QAAA,oEAAS;QAAA,4DAAK;QACrD,2EAAsC;QAAA,uEAAO;QAAA,4DAAQ;QACrD,2EAEA;QADE,0LAA4B;QAD9B,4DAEA;QAAA,4EAAsC;QAAA,oEAAQ;QAAA,4DAAQ;QACtD,4EAEA;QADE,2LAA4B;QAD9B,4DAEA;QAKA,8EAA6F;QAAA,kEAAM;QAAA,4DAAS;QAC5G,yEAAgC;QAAA,kGAAiC;QAAA,4DAAI;QACrE,8EAAgG;QAAlD,uIAAS,qBAAiB,oBAAoB,EAAE,IAAC;QAAC,8EACrF;QAAA,4DAAS;QACtB,4DAAO;QAET,4DAAO;;;QAvBK,8EAAiB;QAQvB,0DAA4B;QAA5B,uFAA4B;QAG5B,0DAA4B;QAA5B,uFAA4B;QAMtB,0DAA6B;QAA7B,gFAA6B;;6FDP5B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;ICW5D,0EAEE;IAAA,mGACF;IAAA,4DAAM;;;IAMN,0EAEE;IAAA,2FACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,4FACF;IAAA,4DAAM;;;IAMN,0EAEE;IAAA,kGACF;IAAA,4DAAM;;;IAQJ,0EAEE;IAAA,mGACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,2FACF;IAAA,4DAAM;;;IAQN,0EAEE;IAAA,6EACF;IAAA,4DAAM;;;IACN,0EAEE;IAAA,mGACF;IAAA,4DAAM;;;ADvDT,MAAM,qBAAqB;IAKhC,YAAoB,WAAwB,EACjC,MAAc,EACd,EAAe,EACd,MAAqB;QAHb,gBAAW,GAAX,WAAW,CAAa;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACd,WAAM,GAAN,MAAM,CAAe;IACjC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;aAC3C,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,EAAa;QAC1B,MAAM,gBAAgB,GAAG,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACnD,IAAI,gBAAgB,CAAC,MAAM,IAAI,IAAI,IAAI,UAAU,IAAI,gBAAgB,CAAC,MAAM,EAAE;YAC5E,IAAI,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,gBAAgB,CAAC,KAAK,EAAE;gBACvD,gBAAgB,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAChD;iBAAM;gBACL,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAClC;SACF;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CACvB,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,EAC/D,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC5C,GAAG,EAAE;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAC5C,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACrB,QAAQ,OAAO,CAAC,IAAI,EAAE;wBACpB,KAAK,mBAAmB;4BACtB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;4BACzC,MAAM;wBACR;4BACE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,0BAA0B,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;4BAC5D,MAAM;qBACT;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAEF,CAAC;SACH;IACH,CAAC;;0FA/DU,qBAAqB;qGAArB,qBAAqB;QCZlC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,mFAAmB;QAAA,4DAAK;QAC9B,4DAAM;QACR,4DAAM;QACN,yEACE;QAAA,0EACE;QAAA,yEACE;QAAA,2EAAc;QAAA,yEAAc;QAAA,4DAAQ;QACpC,uEAEA;QAAA,mHAEE;QAEJ,4DAAM;QACN,0EACE;QAAA,4EAAc;QAAA,kEAAM;QAAA,4DAAQ;QAC5B,wEAEA;QAAA,mHAEE;QAEF,mHAEE;QAEJ,4DAAM;QACN,0EACE;QAAA,4EAAc;QAAA,oEAAQ;QAAA,4DAAQ;QAC9B,wEAEA;QAAA,mHAEE;QAEJ,4DAAM;QACN,2EACE;QAAA,0EACE;QAAA,4EAAc;QAAA,kEAAM;QAAA,4DAAQ;QAC5B,wEAGA;QAAA,mHAEE;QAEF,mHAEE;QAEJ,4DAAM;QACN,0EACE;QAAA,4EAAc;QAAA,4EAAgB;QAAA,4DAAQ;QACtC,wEAIA;QAAA,mHAEE;QAEF,mHAEE;QAEJ,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,8EAC+B;QAA7B,8IAAS,sBAAkB,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QAClD,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;;QAvEI,0DAA0B;QAA1B,uFAA0B;QAGuC,0DACF;QADE,gOACF;QAC5D,0DAC4C;QAD5C,mKAC4C;QAMe,0DACA;QADA,0NACA;QAC3D,0DACyC;QADzC,6JACyC;QAGzC,0DACgC;QADhC,0JACgC;QAM8B,0DACD;QADC,gOACD;QAC7D,0DAC4C;QAD5C,mKAC4C;QAOwB,0DACM;QADN,oPACM;QAExE,0DAC4C;QAD5C,wLAC4C;QAG5C,0DACsD;QADtD,uLACsD;QAMmB,0DAGJ;QAHI,yYAGJ;QACrE,0DAC6D;QAD7D,qMAC6D;QAG7D,0DACgE;QADhE,qMACgE;QAOpB,0DAAgC;QAAhC,6FAAgC;;6FD5D9E,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACE;QAAA,yEACE;QAAA,2EAA+B;QACjC,4DAAM;QACR,4DAAM;;6FDGO,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Constants {\n    static readonly DATE_FMT = 'dd/MM/yyyy';\n    static readonly DATE_TIME_FMT = `${Constants.DATE_FMT}: hh:mm`;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Constants } from '../Util/Constants';\n\n@Pipe({\n  name: 'DateTimeFormatPipe'\n})\nexport class DateTimeFormatPipePipe extends DatePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return super.transform(value, Constants.DATE_TIME_FMT);\n  }\n\n}\n","import { Lote } from './Lote';\nimport { RedeSocial } from './RedeSocial';\nimport { Palestrante } from './Palestrante';\n\nexport class Evento {\n\n    constructor() { }\n\n    id: number;\n    local: string;\n    dataEvento: Date;\n    tema: string;\n    qtdPessoas: number;\n    imagemURL: string;\n    telefone: string;\n    email: string;\n    lotes: Lote[];\n    redesSociais: RedeSocial[];\n    palestrantesEventos: Palestrante[];\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  baseURL = 'http://localhost:5000/api/user/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) { }\n\n  login(model: any) {\n    return this.http\n      .post(`${this.baseURL}login`, model).pipe(\n        map((response: any) => {\n          const user = response;\n          if (user) {\n            localStorage.setItem('token', user.token);\n            this.decodedToken = this.jwtHelper.decodeToken(user.token);\n            sessionStorage.setItem('username', this.decodedToken.unique_name);\n          }\n        })\n      );\n  }\n\n  register(model: any) {\n    return this.http.post(`${this.baseURL}register`, model);\n  }\n\n  loggedIn() {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Evento } from '../_models/Evento';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventoService {\r\n  baseURL = 'http://localhost:5000/api/evento';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllEvento(): Observable<Evento[]> {\r\n    return this.http.get<Evento[]>(this.baseURL);\r\n  }\r\n\r\n  getEventoByTema(tema: string): Observable<Evento[]> {\r\n    return this.http.get<Evento[]>(`${this.baseURL}/getByTema/${tema}`);\r\n  }\r\n\r\n  getEventoById(id: number): Observable<Evento> {\r\n    return this.http.get<Evento>(`${this.baseURL}/${id}`);\r\n  }\r\n\r\n  postUpload(file: File, name: string) {\r\n    const fileToUplaod = <File>file[0];\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUplaod, name);\r\n\r\n    return this.http.post(`${this.baseURL}/upload`, formData);\r\n  }\r\n\r\n  postEvento(evento: Evento) {\r\n    return this.http.post(this.baseURL, evento);\r\n  }\r\n\r\n  putEvento(evento: Evento) {\r\n    return this.http.put(`${this.baseURL}/${evento.id}`, evento);\r\n  }\r\n\r\n  deleteEvento(id: number) {\r\n    return this.http.delete(`${this.baseURL}/${id}`);\r\n  }\r\n\r\n}","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-titulo',\n  templateUrl: './titulo.component.html',\n  styleUrls: ['./titulo.component.css']\n})\nexport class TituloComponent implements OnInit {\n  @Input() titulo: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h2>\n  {{titulo}}\n</h2>\n<hr>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EventosComponent } from './eventos/eventos.component';\nimport { EventoEditComponent } from './eventos/eventoEdit/eventoEdit.component';\n\nimport { PalestrantesComponent } from './palestrantes/palestrantes.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ContatosComponent } from './contatos/contatos.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { AuthGuard } from './auth/auth.guard';\n\n\n\nconst routes: Routes = [\n  { path: 'user', component: UserComponent,\n    children : [\n      { path: 'login', component: LoginComponent },\n      { path: 'registration', component: RegistrationComponent }\n    ]\n  },\n\n  { path: 'eventos', component: EventosComponent, canActivate: [AuthGuard] },\n  { path: 'evento/:id/edit', component: EventoEditComponent, canActivate: [AuthGuard] },\n  { path: 'palestrantes', component: PalestrantesComponent, canActivate: [AuthGuard] },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'contatos', component: ContatosComponent, canActivate: [AuthGuard] },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }, // caso não passe nehuma rota\n  { path: '**', redirectTo: 'dashboard', pathMatch: 'full' } // caso passe uma rota errada\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Pro Agil Eventos';\n}\n","\n<app-nav></app-nav>\n\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { CommonModule } from '@angular/common';\nimport { ToastrModule } from 'ngx-toastr';\nimport { DateTimeFormatPipePipe } from './_helps/DateTimeFormatPipe.pipe';\nimport { AuthInterceptor } from './auth/auth.interceptor';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { EventosComponent } from './eventos/eventos.component';\nimport { EventoEditComponent } from './eventos/eventoEdit/eventoEdit.component';\nimport { PalestrantesComponent } from './palestrantes/palestrantes.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ContatosComponent } from './contatos/contatos.component';\nimport { TituloComponent } from './_shared/titulo/titulo.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\n\n\n@NgModule({\n   declarations: [\n      DateTimeFormatPipePipe,\n      AppComponent,\n      NavComponent,\n      EventosComponent,\n      EventoEditComponent,\n      PalestrantesComponent,\n      DashboardComponent,\n      ContatosComponent,\n      TituloComponent,\n      UserComponent,\n      LoginComponent,\n      RegistrationComponent\n   ],\n   imports: [\n      BrowserModule,\n      TabsModule.forRoot(),\n      NgxMaskModule.forRoot(),\n      BsDropdownModule.forRoot(),\n      BsDatepickerModule.forRoot(),\n      TooltipModule.forRoot(),\n      ModalModule.forRoot(),\n      BrowserAnimationsModule,\n      ToastrModule.forRoot({ timeOut: 3000, preventDuplicates: true, progressBar: true}),\n      CommonModule,\n      AppRoutingModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule\n   ],\n   providers: [\n      {\n         provide: HTTP_INTERCEPTORS,\n         useClass: AuthInterceptor,\n         multi: true\n      }\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('token') !== null) {\n      return true;\n    } else {\n      this.router.navigate(['/user/login']);\n      return false;\n    }\n  }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n//import { tap } from 'rxjs/internal/operators/tap';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (localStorage.getItem('token') !== null) {\r\n            const cloneReq = req.clone({\r\n                headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`)\r\n            });\r\n            return next.handle(cloneReq);\r\n            \r\n        } else {\r\n            return next.handle(req.clone());\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contatos',\n  templateUrl: './contatos.component.html',\n  styleUrls: ['./contatos.component.css']\n})\nexport class ContatosComponent implements OnInit {\n  titulo = 'Contatos';\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"titulo\"></app-titulo>\n<p>\n  contatos works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container mt-4\">\n  <div class=\"row mbr-justify-content-center\">\n\n    <div class=\"col-lg-6 mbr-col-md-10\">\n        <a href=\"#\" class=\"wrap\">\n            <div class=\"ico-wrap\">\n                <span class=\"mbr-iconfont fa-volume-up fa\"></span>\n            </div>\n            <div class=\"text-wrap vcenter\">\n                <h2 class=\"mbr-fonts-style mbr-bold mbr-section-title3 display-5\">Encontre <span>sua Audiência</span></h2>\n                <p class=\"mbr-fonts-style text1 mbr-text display-6\">Utilize o sistema de Eventos ProAgil e Seja visto por muito mais pessoas, gerenciando de maneira exemplar!</p>\n            </div>\n          </a>\n    </div>\n    <div class=\"col-lg-6 mbr-col-md-10\">\n        <a href=\"#\" class=\"wrap\">\n            <div class=\"ico-wrap\">\n                <span class=\"mbr-iconfont fa-calendar fa\"></span>\n            </div>\n            <div class=\"text-wrap vcenter\">\n                <h2 class=\"mbr-fonts-style mbr-bold mbr-section-title3 display-5\">Crie\n                    <span>um Time Efetivo</span>\n                </h2>\n                <p class=\"mbr-fonts-style text1 mbr-text display-6\">Eventos com palestrantes capacitados com certeza serão muito melhores que sem eles.</p>\n              </div>\n            </a>\n    </div>\n    <div class=\"col-lg-6 mbr-col-md-10\">\n        <a href=\"#\" class=\"wrap\">\n            <div class=\"ico-wrap\">\n                <span class=\"mbr-iconfont fa-globe fa\"></span>\n            </div>\n            <div class=\"text-wrap vcenter\">\n                <h2 class=\"mbr-fonts-style mbr-bold mbr-section-title3 display-5\">Lançamento\n                    <span>Unico de Projetos</span>\n                </h2>\n                <p class=\"mbr-fonts-style text1 mbr-text display-6\">Projetos que são lançados em eventos tem 95% de chance a mais, diz estudo!</p>\n              </div>\n            </a>\n    </div>\n    <div class=\"col-lg-6 mbr-col-md-10\">\n        <a href=\"#\" class=\"wrap\">\n            <div class=\"ico-wrap\">\n                <span class=\"mbr-iconfont fa-trophy fa\"></span>\n            </div>\n            <div class=\"text-wrap vcenter\">\n                <h2 class=\"mbr-fonts-style mbr-bold mbr-section-title3 display-5\">Alcance <span>Seus Objetivos</span></h2>\n                <p class=\"mbr-fonts-style text1 mbr-text display-6\">Quando os eventos tem a possibilidade de dar premiação a participantes e palestrantes é muito melhor!</p>\n            </div>\n          </a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { EventoService } from 'src/app/_services/evento.service';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Evento } from 'src/app/_models/Evento';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-evento-edit',\r\n  templateUrl: './eventoEdit.component.html',\r\n  styleUrls: ['./eventoEdit.component.css']\r\n})\r\nexport class EventoEditComponent implements OnInit {\r\n\r\n  titulo = 'Editar Evento';\r\n  evento: Evento = new Evento();\r\n  imagemURL = 'assets/img/upload.png';\r\n  registerForm: FormGroup;\r\n  file: File;\r\n  fileNameToUpdate: string;\r\n\r\n  dataAtual = '';\r\n\r\n  get lotes(): FormArray {\r\n    return <FormArray>this.registerForm.get('lotes');\r\n  }\r\n\r\n  get redesSociais(): FormArray {\r\n    return <FormArray>this.registerForm.get('redesSociais');\r\n  }\r\n\r\n  constructor(\r\n    private eventoService: EventoService\r\n    , private fb: FormBuilder\r\n    , private localeService: BsLocaleService\r\n    , private toastr: ToastrService\r\n    , private router: ActivatedRoute\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.validation();\r\n    this.carregarEvento();\r\n  }\r\n\r\n  carregarEvento() {\r\n    const idEvento = +this.router.snapshot.paramMap.get('id');\r\n    this.eventoService.getEventoById(idEvento)\r\n      .subscribe(\r\n        (evento: Evento) => {\r\n          this.evento = Object.assign({}, evento);\r\n          this.fileNameToUpdate = evento.imagemURL.toString();\r\n\r\n          this.imagemURL = `http://localhost:5000/resources/images/${this.evento.imagemURL}?_ts=${this.dataAtual}`;\r\n\r\n          this.evento.imagemURL = '';\r\n          this.registerForm.patchValue(this.evento);\r\n\r\n          this.evento.lotes.forEach(lote => {\r\n            this.lotes.push(this.criaLote(lote));\r\n          });\r\n          this.evento.redesSociais.forEach(redeSocial => {\r\n            this.redesSociais.push(this.criaRedeSocial(redeSocial));\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  validation() {\r\n    this.registerForm = this.fb.group({\r\n      id: [],\r\n      tema: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\r\n      local: ['', Validators.required],\r\n      dataEvento: ['', Validators.required],\r\n      imagemURL: [''],\r\n      qtdPessoas: ['', [Validators.required, Validators.max(120000)]],\r\n      telefone: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      lotes: this.fb.array([]),\r\n      redesSociais: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  criaLote(lote: any): FormGroup {\r\n    return this.fb.group({\r\n      id: [lote.id],\r\n      nome: [lote.nome, Validators.required],\r\n      quantidade: [lote.quantidade, Validators.required],\r\n      preco: [lote.preco, Validators.required],\r\n      dataInicio: [lote.dataInicio],\r\n      dataFim: [lote.dataFim]\r\n    });\r\n  }\r\n\r\n  criaRedeSocial(redeSocial: any): FormGroup {\r\n    return this.fb.group({\r\n      id: [redeSocial.id],\r\n      nome: [redeSocial.nome, Validators.required],\r\n      url: [redeSocial.url, Validators.required]\r\n    });\r\n  }\r\n\r\n  adicionarLote() {\r\n    this.lotes.push(this.criaLote({ id: 0 }));\r\n  }\r\n\r\n  adicionarRedeSocial() {\r\n    this.redesSociais.push(this.criaRedeSocial({ id: 0 }));\r\n  }\r\n\r\n  removerLote(id: number) {\r\n    this.lotes.removeAt(id);\r\n  }\r\n\r\n  removerRedeSocial(id: number) {\r\n    this.redesSociais.removeAt(id);\r\n  }\r\n\r\n  onFileChange(evento: any, file: FileList) {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event: any) => this.imagemURL = event.target.result;\r\n\r\n    this.file = evento.target.files;\r\n    reader.readAsDataURL(file[0]);\r\n  }\r\n\r\n  salvarEvento() {\r\n    this.evento = Object.assign({ id: this.evento.id }, this.registerForm.value);\r\n    this.evento.imagemURL = this.fileNameToUpdate;\r\n\r\n    this.uploadImagem();\r\n\r\n    this.eventoService.putEvento(this.evento).subscribe(\r\n      () => {\r\n        this.toastr.success('Editado com Sucesso!');\r\n      }, error => {\r\n        this.toastr.error(`Erro ao Editar: ${error}`);\r\n      }\r\n    );\r\n  }\r\n\r\n  uploadImagem() {\r\n    if (this.registerForm.get('imagemURL').value !== '') {\r\n      this.eventoService.postUpload(this.file, this.fileNameToUpdate)\r\n        .subscribe(\r\n          () => {\r\n            this.dataAtual = new Date().getMilliseconds().toString();\r\n            this.imagemURL = `http://localhost:5000/resources/images/${this.evento.imagemURL}?_ts=${this.dataAtual}`;\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n}","<app-titulo [titulo]=\"titulo\"></app-titulo>\r\n<form [formGroup]=\"registerForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-8\">\r\n      <tabset>\r\n        <tab heading=\"Evento\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n              <label>Tema</label>\r\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"evento.tema\"\r\n                [ngClass]=\"{'is-invalid': registerForm.get('tema').errors && registerForm.get('tema').touched}\"\r\n                formControlName=\"tema\" placeholder=\"Insira o Tema\">\r\n              <div *ngIf=\"registerForm.get('tema').hasError('required')\r\n              && registerForm.get('tema').touched\" class=\"invalid-feedback\">\r\n                Tema é obrigatório.\r\n              </div>\r\n              <div *ngIf=\"registerForm.get('tema').hasError('minlength')\r\n            && registerForm.get('tema').touched\" class=\"invalid-feedback\">\r\n                Tema deve ter no mínimo 4 Caracters.\r\n              </div>\r\n              <div *ngIf=\"registerForm.get('tema').hasError('maxlength')\r\n          && registerForm.get('tema').touched\" class=\"invalid-feedback\">\r\n                Tema deve ter no máximo 50 Caracters.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-8\">\r\n              <label>Local</label>\r\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"evento.local\" [ngClass]=\"{'is-invalid': registerForm.get('local').errors\r\n              && registerForm.get('local').touched}\" formControlName=\"local\" placeholder=\"\">\r\n              <div *ngIf=\"registerForm.get('local').hasError('required')\r\n              && registerForm.get('local').touched\" class=\"invalid-feedback\">\r\n                Local é obrigatório.\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-md-4\">\r\n              <label>Data e Hora</label>\r\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"evento.dataEvento\" bsDatepicker\r\n                value=\"{{evento.dataEvento | DateTimeFormatPipe}}\"\r\n                [bsConfig]=\"{ dateInputFormat : 'DD/MM/YYYY hh:mm' }\" [ngClass]=\"{'is-invalid': registerForm.get('dataEvento').errors\r\n            && registerForm.get('dataEvento').touched}\" formControlName=\"dataEvento\" placeholder=\"\">\r\n              <div *ngIf=\"registerForm.get('dataEvento').hasError('required')\r\n            && registerForm.get('dataEvento').touched\" class=\"invalid-feedback\">\r\n                Data e hora é obrigatório.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-2\">\r\n              <label>Qtd Pessoas</label>\r\n              <input type=\"text\" [(ngModel)]=\"evento.qtdPessoas\" [ngClass]=\"{'is-invalid': registerForm.get('qtdPessoas').errors\r\n              && registerForm.get('qtdPessoas').touched}\" class=\"form-control is-invalid\" formControlName=\"qtdPessoas\"\r\n                placeholder=\"\">\r\n              <div *ngIf=\"registerForm.get('qtdPessoas').hasError('required')\r\n              && registerForm.get('qtdPessoas').touched\" class=\"invalid-feedback\">\r\n                Qtd Pessoas é obrigatório.\r\n              </div>\r\n              <div *ngIf=\"registerForm.get('qtdPessoas').hasError('max')\r\n            && registerForm.get('qtdPessoas').touched\" class=\"invalid-feedback\">\r\n                Qtd Pessoas deve ser menor que 120000.\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group col-md-4\">\r\n              <label>Telefone</label>\r\n              <input type=\"text\" mask=\"(000) 0000-0000\" class=\"form-control\" [(ngModel)]=\"evento.telefone\" [ngClass]=\"{'is-invalid': registerForm.get('telefone').errors\r\n            && registerForm.get('telefone').touched}\" formControlName=\"telefone\" placeholder=\"(000) 90000-0000\">\r\n              <div *ngIf=\"registerForm.get('telefone').hasError('required')\r\n            && registerForm.get('telefone').touched\" class=\"invalid-feedback\">\r\n                Telefone é obrigatório.\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-md-6\">\r\n              <label>Email</label>\r\n              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"evento.email\" [ngClass]=\"{'is-invalid': registerForm.get('email').errors\r\n            && registerForm.get('email').touched}\" formControlName=\"email\" placeholder=\"e-mail\">\r\n              <div *ngIf=\"registerForm.get('email').hasError('required')\r\n            && registerForm.get('email').touched\" class=\"invalid-feedback\">\r\n                Email é obrigatório.\r\n              </div>\r\n              <div *ngIf=\"registerForm.get('email').hasError('email')\r\n          && registerForm.get('email').touched\" class=\"invalid-feedback\">\r\n                Deve ser um e-mail válido.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </tab>\r\n        <tab heading=\"Lotes\">\r\n          <div>\r\n            <div formArrayName=\"lotes\" *ngFor=\"let lote of lotes.controls; let i=index\">\r\n              <fieldset [formGroupName]=\"i\" class=\"form-group\">\r\n                <legend class=\"d-flex justify-content-between capitalize\">\r\n                  {{ lotes.get(i+'.nome').value === '' ?\r\n                    'Lotes' :\r\n                    lotes.get(i+'.nome').value\r\n                  }}\r\n                  <button class=\"btn btn-sm btn-warning mb-1\" (click)=\"removerLote(i)\">remove</button>\r\n                </legend>\r\n                <div class=\"row\">\r\n                  <div class=\"form-group col-md-4\">\r\n                    <label>Nome</label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                      [ngClass]=\"{'is-invalid': lotes.get(i+'.nome').errors && lotes.get(i+'.nome').touched}\"\r\n                      formControlName=\"nome\" placeholder=\"Lote\">\r\n                  </div>\r\n                  <div class=\"form-group col-md-4\">\r\n                    <label>Quantidade</label>\r\n                    <input type=\"text\" class=\"form-control\"\r\n                      [ngClass]=\"{'is-invalid': lotes.get(i+'.quantidade').errors && lotes.get(i+'.quantidade').touched}\"\r\n                      formControlName=\"quantidade\" placeholder=\"000\">\r\n                  </div>\r\n                  <div class=\"form-group col-md-4\">\r\n                    <label>Preço</label>\r\n                    <input type=\"text\" currencyMask[options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',', align: 'left' }\"\r\n                      class=\"form-control\"\r\n                      [ngClass]=\"{'is-invalid': lotes.get(i+'.preco').errors && lotes.get(i+'.preco').touched}\"\r\n                      formControlName=\"preco\" placeholder=\"R$ 0,00\">\r\n                  </div>\r\n                  <div class=\"form-group col-md-4\">\r\n                    <label>Data Início</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"dataInicio\" placeholder=\"01/01/2019\">\r\n                  </div>\r\n                  <div class=\"form-group col-md-4\">\r\n                    <label>Data Fim</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"dataFim\" placeholder=\"01/01/2019\">\r\n                  </div>\r\n\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n            <button (click)=\"adicionarLote()\" class=\"btn btn-outline-primary\">\r\n              Adicionar Lote\r\n            </button>\r\n          </div>\r\n        </tab>\r\n        <tab heading=\"Redes Sociais\">\r\n          <div formArrayName=\"redesSociais\" *ngFor=\"let redeSocial of redesSociais.controls; let j=index\">\r\n            <fieldset [formGroupName]=\"j\" class=\"form-group\">\r\n              <legend class=\"d-flex justify-content-between capitalize\">\r\n                {{ redesSociais.get(j+'.nome').value == '' ?\r\n                    'Redes Sociais' :\r\n                    redesSociais.get(j+'.nome').value?.replace('fab fa-', '')\r\n                  }}\r\n                <button class=\"btn btn-sm btn-warning mb-1\" (click)=\"removerRedeSocial(j)\">remove</button>\r\n              </legend>\r\n              <div class=\"row\">\r\n                <div class=\"form-group col-md-4\">\r\n                  <label>Nome</label>\r\n                  <select class=\"form-control\"\r\n                    [ngClass]=\"{'is-invalid': redesSociais.get(j+'.nome').errors && redesSociais.get(j+'.nome').touched}\"\r\n                    formControlName=\"nome\">\r\n                    <option value=\"\">Selecione</option>\r\n                    <option value=\"fab fa-youtube\">Youtube</option>\r\n                    <option value=\"fab fa-instagram\">Instagram</option>\r\n                    <option value=\"fab fa-facebook\">Facebook</option>\r\n                    <option value=\"fab fa-twitter\">Twitter</option>\r\n                    <option value=\"fab fa-google\">Google</option>\r\n                    <option value=\"fab fa-linkedin\">Linkedin</option>\r\n                    <option value=\"fab fa-pinterest\">Pinterest</option>\r\n                    <option value=\"fab fa-whatsapp\">Whatsapp</option>\r\n                    <option value=\"fab fa-telegram\">Telegram</option>\r\n                    <option value=\"fab fa-skype\">Skype</option>\r\n                    <option value=\"fab fa-vimeo\">Vimeo</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"form-group col-md-8\">\r\n                  <label>Link</label>\r\n                  <input type=\"text\" prefix=\"http://\" mask=\"\"\r\n                    [ngClass]=\"{'is-invalid': redesSociais.get(j+'.url').errors && redesSociais.get(j+'.url').touched}\"\r\n                    formControlName=\"url\" class=\"form-control\" placeholder=\"URL\">\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n          <button (click)=\"adicionarRedeSocial()\" class=\"btn btn-outline-primary\">\r\n            Adicionar Rede Social\r\n          </button>\r\n        </tab>\r\n      </tabset>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 d-flex justify-content-end\">\r\n          <!-- {{registerForm.value | json}} -->\r\n          <button [disabled]=\"!registerForm.valid\" class=\"btn btn-success my-2\" (click)=\"salvarEvento()\">Salvar\r\n            Alterações</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <div class=\"form-row\">\r\n        <div class=\"form-group col-md-9\">\r\n          <input type=\"file\" #file (change)=\"onFileChange($event, $event.target.files)\" class=\"form-control is-invalid\"\r\n            formControlName=\"imagemURL\" placeholder=\"\" style=\"display: none\">\r\n        </div>\r\n      </div>\r\n      <div class=\"card profile-card-2\">\r\n        <div class=\"card-img-block\">\r\n          <img [src]=\"imagemURL\" class=\"img-fluid\" (click)=\"file.click()\" style=\"cursor: pointer; width: 350px;\"\r\n            alt=\"Card image cap\" />\r\n        </div>\r\n        <div class=\"card-body pt-3\">\r\n          <h4>{{evento.tema}}</h4>\r\n          <p class=\"card-text\">\r\n            <b>Local:</b> {{evento.local}}\r\n            <br>\r\n            <b>Data:</b> {{evento.dataEvento | DateTimeFormatPipe}}\r\n          </p>\r\n          <hr>\r\n          <p class=\"card-text\">\r\n            <b>Contatos</b><br>\r\n            <small class=\"text-muted\">Telefone: {{evento.telefone | mask: '(000) 00000-0000'}}</small>\r\n            <br>\r\n            <small class=\"text-muted\">e-mail: {{evento.email}}</small>\r\n          </p>\r\n          <p class=\"card-text\">\r\n            Capacidade:\r\n            <small class=\"text-muted\">{{evento.qtdPessoas}}</small>\r\n          </p>\r\n          <div class=\"row\">\r\n            <div class=\"icon-block col-md-8 iconesSociais\">\r\n              <a href=\"{{redesSociais.get(l+'.url').value}}\"\r\n                *ngFor=\"let redeSocial of redesSociais.controls; let l=index;\" class=\"mr-3\" target=\"_blank\">\r\n                <i class=\"{{redesSociais.get(l+'.nome').value}}\"></i>\r\n              </a>\r\n            </div>\r\n            <!--div class=\"col-md-4 d-flex justify-content-center\">\r\n              <a href=\"#\" class=\"btn btn-outline-primary\">Participar</a>\r\n            </div-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { EventoService } from '../_services/evento.service';\r\nimport { Evento } from '../_models/Evento';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { defineLocale } from 'ngx-bootstrap/chronos';\r\nimport { ptBrLocale } from 'ngx-bootstrap/locale';\r\nimport { BsLocaleService } from 'ngx-bootstrap/datepicker';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\ndefineLocale('pt-br', ptBrLocale);\r\n\r\n@Component({\r\n  selector: 'app-eventos',\r\n  templateUrl: './eventos.component.html',\r\n  styleUrls: ['./eventos.component.css']\r\n})\r\nexport class EventosComponent implements OnInit {\r\n\r\n  titulo = 'Eventos';\r\n  dataEvento: string;\r\n  eventosFiltrados: Evento[];\r\n  eventos: Evento[];\r\n  evento: Evento;\r\n  modoSalvar = 'post';\r\n\r\n  imagemLargura = 50;\r\n  imagemMargem = 2;\r\n  mostrarImagem = false;\r\n  registerForm: FormGroup;\r\n  bodyDeletarEvento = '';\r\n\r\n  file: File;\r\n  fileNameToUpdate: string;\r\n\r\n  dataAtual: string;\r\n\r\n  _filtroLista = '';\r\n\r\n  constructor(\r\n    private eventoService: EventoService\r\n    , private modalService: BsModalService\r\n    , private fb: FormBuilder\r\n    , private localeService: BsLocaleService\r\n    , private toastr: ToastrService\r\n  ) {\r\n    this.localeService.use('pt-br');\r\n  }\r\n\r\n  get filtroLista(): string {\r\n    return this._filtroLista;\r\n  }\r\n  set filtroLista(value: string) {\r\n    this._filtroLista = value;\r\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;    \r\n  }\r\n\r\n  // Sugestão do Aluno Kelvi Martins Ribeiro\r\n  // filtrarEventos(filtrarPor: string) { \r\n  //   filtrarPor = filtrarPor.toLocaleLowerCase() \r\n  //   return this.eventos.filter(evento => { \r\n  //     return evento.tema.toLocaleLowerCase().includes(filtrarPor) \r\n  //   }) \r\n  // }\r\n  \r\n  // Sugestão do Aluno Pablo Ferreira\r\n  // filtrarClientes(filtrarPor: string): Cliente[] {     \r\n  //   filtrarPor = filtrarPor.toLocaleLowerCase();     \r\n  //   return this._cliente.filter(\r\n  //     cliente => cliente.nome.toLocaleLowerCase().indexOf(filtrarPor) !== -1                  \r\n  //     || cliente.nomeDelegacia.toLocaleLowerCase().indexOf(filtrarPor) !== -1                  \r\n  //     || cliente.status.toLocaleLowerCase().startsWith(filtrarPor)     \r\n  //   );   \r\n  // }\r\n  \r\n  editarEvento(evento: Evento, template: any) {\r\n    this.modoSalvar = 'put';\r\n    this.openModal(template);\r\n    this.evento = Object.assign({}, evento);\r\n    this.fileNameToUpdate = evento.imagemURL.toString();\r\n    this.evento.imagemURL = '';\r\n    this.registerForm.patchValue(this.evento);\r\n  }\r\n\r\n  novoEvento(template: any) {\r\n    this.modoSalvar = 'post';\r\n    this.openModal(template);\r\n  }\r\n\r\n  excluirEvento(evento: Evento, template: any) {\r\n    this.openModal(template);\r\n    this.evento = evento;\r\n    this.bodyDeletarEvento = `Tem certeza que deseja excluir o Evento: ${evento.tema}, Código: ${evento.id}`;\r\n  }\r\n\r\n  confirmeDelete(template: any) {\r\n    this.eventoService.deleteEvento(this.evento.id).subscribe(\r\n      () => {\r\n        template.hide();\r\n        this.getEventos();\r\n        this.toastr.success('Deletado com Sucesso');\r\n      }, error => {\r\n        this.toastr.error('Erro ao tentar Deletar');\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  openModal(template: any) {\r\n    this.registerForm.reset();\r\n    template.show();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.validation();\r\n    this.getEventos();\r\n  }\r\n\r\n  filtrarEventos(filtrarPor: string): Evento[] {\r\n    filtrarPor = filtrarPor.toLocaleLowerCase();\r\n    return this.eventos.filter(\r\n      evento => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1\r\n    );\r\n  }\r\n\r\n  alternarImagem() {\r\n    this.mostrarImagem = !this.mostrarImagem;\r\n  }\r\n\r\n  validation() {\r\n    this.registerForm = this.fb.group({\r\n      tema: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\r\n      local: ['', Validators.required],\r\n      dataEvento: ['', Validators.required],\r\n      imagemURL: ['', Validators.required],\r\n      qtdPessoas: ['', [Validators.required, Validators.max(120000)]],\r\n      telefone: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n  }\r\n\r\n  onFileChange(event) {\r\n    const reader = new FileReader();\r\n\r\n    if (event.target.files && event.target.files.length) {\r\n      this.file = event.target.files;\r\n      console.log(this.file);\r\n    }\r\n  }\r\n\r\n  uploadImagem() {\r\n    if (this.modoSalvar === 'post') {\r\n      const nomeArquivo = this.evento.imagemURL.split('\\\\', 3);\r\n      this.evento.imagemURL = nomeArquivo[2];\r\n\r\n      this.eventoService.postUpload(this.file, nomeArquivo[2])\r\n        .subscribe(\r\n          () => {\r\n            this.dataAtual = new Date().getMilliseconds().toString();\r\n            this.getEventos();\r\n          }\r\n        );\r\n    } else {\r\n      this.evento.imagemURL = this.fileNameToUpdate;\r\n      this.eventoService.postUpload(this.file, this.fileNameToUpdate)\r\n        .subscribe(\r\n          () => {\r\n            this.dataAtual = new Date().getMilliseconds().toString();\r\n            this.getEventos();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  salvarAlteracao(template: any) {\r\n    if (this.registerForm.valid) {\r\n      if (this.modoSalvar === 'post') {\r\n        this.evento = Object.assign({}, this.registerForm.value);\r\n\r\n        this.uploadImagem();\r\n\r\n        this.eventoService.postEvento(this.evento).subscribe(\r\n          (novoEvento: Evento) => {\r\n            template.hide();\r\n            this.getEventos();\r\n            this.toastr.success('Inserido com Sucesso!');\r\n          }, error => {\r\n            this.toastr.error(`Erro ao Inserir: ${error}`);\r\n          }\r\n        );\r\n      } else {\r\n        this.evento = Object.assign({ id: this.evento.id }, this.registerForm.value);\r\n\r\n        this.uploadImagem();\r\n\r\n        this.eventoService.putEvento(this.evento).subscribe(\r\n          () => {\r\n            template.hide();\r\n            this.getEventos();\r\n            this.toastr.success('Editado com Sucesso!');\r\n          }, error => {\r\n            this.toastr.error(`Erro ao Editar: ${error}`);\r\n          }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  getEventos() {\r\n    this.dataAtual = new Date().getMilliseconds().toString();\r\n\r\n    this.eventoService.getAllEvento().subscribe(\r\n      (_eventos: Evento[]) => {\r\n        this.eventos = _eventos;\r\n        this.eventosFiltrados = this.eventos;\r\n        console.log(this.eventos);\r\n      }, error => {\r\n        this.toastr.error(`Erro ao tentar Carregar eventos: ${error}`);\r\n      });\r\n  }\r\n\r\n}","<app-titulo [titulo]=\"titulo\"></app-titulo>\r\n<div class=\"d-flex\">\r\n  <div class=\"form-inline mr-auto\">\r\n    <div class=\"form-group mb-2\">\r\n      <label class=\"mr-2\">Filtro:</label> <input type=\"text\" class=\"form-control mr-2\" placeholder=\"buscar\"\r\n        [(ngModel)]=\"filtroLista\">\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <button class=\"btn btn-outline-primary\" (click)=\"novoEvento(template)\">\r\n      <i class=\"fa fa-plus-circle\"></i>&nbsp;\r\n      Novo Evento\r\n    </button>\r\n  </div>\r\n</div>\r\n<h3>Filtro: {{filtroLista}}</h3>\r\n<table class=\"table table-striped\">\r\n  <thead class=\"thead-light\">\r\n    <tr>\r\n      <th>\r\n        <button class=\"btn btn-outline-primary\" (click)=\"alternarImagem()\">\r\n          <i class=\"{{mostrarImagem ? 'fa fa-eye-slash' : 'fa fa-eye'}}\"></i>\r\n        </button>\r\n      </th>\r\n      <th>#</th>\r\n      <th>Tema</th>\r\n      <th>Local</th>\r\n      <th>Data</th>\r\n      <th>Qtd Pessoas</th>\r\n      <th>Lote</th>\r\n      <th colspan=\"2\">Opções</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody *ngIf=\"eventos && eventos.length\">\r\n    <tr *ngFor=\"let evento of eventosFiltrados\">\r\n      <td>\r\n        <img *ngIf=\"mostrarImagem\" src=\"http://localhost:5000/resources/images/{{evento.imagemURL}}?_ts={{dataAtual}}\"\r\n          [style.width.px]=\"imagemLargura\" [style.margin.px]=\"imagemMargem\">\r\n      </td>\r\n      <td>{{evento.id}}</td>\r\n      <td>{{evento.tema}}</td>\r\n      <td>{{evento.local}}</td>\r\n      <td>{{evento.dataEvento | DateTimeFormatPipe}}</td>\r\n      <td>{{evento.qtdPessoas}}</td>\r\n      <td>\r\n        <div *ngIf=\"!evento.lotes.length\">\r\n          Não Informado\r\n        </div>\r\n        <div *ngIf=\"evento.lotes.length\">\r\n          {{evento.lotes[0].nome | uppercase}}\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <div class=\"btn-group\">\r\n          <button class=\"btn btn-sm btn-success\" tooltip=\"Editar\" (click)=\"editarEvento(evento, template)\">\r\n            <i class=\"fa fa-edit\"></i>\r\n          </button>\r\n          <button class=\"btn btn-sm btn-danger\" tooltip=\"Excluir\" (click)=\"excluirEvento(evento, confirm)\">\r\n            <i class=\"fa fa-eraser\"></i>\r\n          </button>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <a [routerLink]=\"['/evento', evento.id, 'edit']\" tooltip=\"Edição Detalhada\" class=\"btn btn-sm btn-warning\">\r\n          <i class=\"fa fa-edit\"></i>\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n  <tfoot *ngIf=\"!eventos\">\r\n    <tr>\r\n      <td colspan=\"7\" class=\"text-center\">\r\n        <h4>\r\n          Nenhum evento encontrado!\r\n        </h4>\r\n      </td>\r\n    </tr>\r\n  </tfoot>\r\n</table>\r\n\r\n<div bsModal #template=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Large modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" (click)=\"template.hide()\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"registerForm\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-12\">\r\n              <label>Tema</label>\r\n              <input type=\"text\" class=\"form-control\"\r\n                [ngClass]=\"{'is-invalid': registerForm.get('tema').errors && registerForm.get('tema').touched}\"\r\n                formControlName=\"tema\" placeholder=\"Insira o Tema\">\r\n              <div *ngIf=\"registerForm.get('tema').hasError('required')\r\n            && registerForm.get('tema').touched\" class=\"invalid-feedback\">\r\n                Tema é obrigatório.\r\n              </div>\r\n              <div *ngIf=\"registerForm.get('tema').hasError('minlength')\r\n          && registerForm.get('tema').touched\" class=\"invalid-feedback\">\r\n                Tema deve ter no mínimo 4 Caracters.\r\n              </div>\r\n              <div *ngIf=\"registerForm.get('tema').hasError('maxlength')\r\n        && registerForm.get('tema').touched\" class=\"invalid-feedback\">\r\n                Tema deve ter no máximo 50 Caracters.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-8\">\r\n              <label>Local</label>\r\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('local').errors \r\n      && registerForm.get('local').touched}\" formControlName=\"local\" placeholder=\"\">\r\n              <div *ngIf=\"registerForm.get('local').hasError('required')\r\n      && registerForm.get('local').touched\" class=\"invalid-feedback\">\r\n                Local é obrigatório.\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-md-4\">\r\n              <label>Data e Hora</label>\r\n              <input type=\"text\" class=\"form-control\" bsDatepicker value=\"{{dataEvento | DateTimeFormatPipe}}\"\r\n                [(ngModel)]=\"dataEvento\" [bsConfig]=\"{ dateInputFormat : 'DD/MM/YYYY hh:mm' }\" [ngClass]=\"{'is-invalid': registerForm.get('dataEvento').errors \r\n    && registerForm.get('dataEvento').touched}\" formControlName=\"dataEvento\" placeholder=\"\">\r\n              <div *ngIf=\"registerForm.get('dataEvento').hasError('required')\r\n    && registerForm.get('dataEvento').touched\" class=\"invalid-feedback\">\r\n                Data e hora é obrigatório.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-3\">\r\n              <label>Qtd Pessoas</label>\r\n              <input type=\"text\" [ngClass]=\"{'is-invalid': registerForm.get('qtdPessoas').errors \r\n    && registerForm.get('qtdPessoas').touched}\" class=\"form-control is-invalid\" formControlName=\"qtdPessoas\"\r\n                placeholder=\"\">\r\n              <div *ngIf=\"registerForm.get('qtdPessoas').hasError('required')\r\n    && registerForm.get('qtdPessoas').touched\" class=\"invalid-feedback\">\r\n                Qtd Pessoas é obrigatório.\r\n              </div>\r\n              <div *ngIf=\"registerForm.get('qtdPessoas').hasError('max')\r\n  && registerForm.get('qtdPessoas').touched\" class=\"invalid-feedback\">\r\n                Qtd Pessoas deve ser menor que 120000.\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-md-9\">\r\n              <label>Imagem</label>\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <button class=\"btn btn-success\" (click)=\"file.click()\">\r\n                      Enviar Imagem\r\n                    </button>\r\n                    <input type=\"file\" #file [ngClass]=\"{'is-invalid': registerForm.get('imagemURL').errors \r\n        && registerForm.get('imagemURL').touched}\" (change)=\"onFileChange($event)\" class=\"form-control is-invalid\"\r\n                      formControlName=\"imagemURL\" placeholder=\"\" style=\"display: none\">\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n              <div *ngIf=\"registerForm.get('imagemURL').hasError('required')\r\n  && registerForm.get('imagemURL').touched\" class=\"invalid-feedback\">\r\n                Imagem é obrigatório.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-4\">\r\n              <label>Telefone</label>\r\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('telefone').errors \r\n    && registerForm.get('telefone').touched}\" formControlName=\"telefone\" placeholder=\"\">\r\n              <div *ngIf=\"registerForm.get('telefone').hasError('required')\r\n    && registerForm.get('telefone').touched\" class=\"invalid-feedback\">\r\n                Telefone é obrigatório.\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group col-md-8\">\r\n              <label>Email</label>\r\n              <input type=\"text\" class=\"form-control\" [ngClass]=\"{'is-invalid': registerForm.get('email').errors \r\n  && registerForm.get('email').touched}\" formControlName=\"email\" placeholder=\"\">\r\n              <div *ngIf=\"registerForm.get('email').hasError('required')\r\n  && registerForm.get('email').touched\" class=\"invalid-feedback\">\r\n                Email é obrigatório.\r\n              </div>\r\n              <div *ngIf=\"registerForm.get('email').hasError('email')\r\n&& registerForm.get('email').touched\" class=\"invalid-feedback\">\r\n                Deve ser um e-mail válido.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"modal-footer d-flex\">\r\n        <button class=\"btn btn-secondary\" (click)=\"template.hide()\">\r\n          Fechar\r\n        </button>\r\n        <button class=\"btn btn-primary ml-auto\" [disabled]=\"!registerForm.valid\" (click)=\"salvarAlteracao(template)\">\r\n          Salvar Alterações\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div bsModal #confirm=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\r\n  <div class=\"modal-dialog modal-sm\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 class=\"modal-title pull-left\">\r\n          Deletando Evento\r\n        </h4>\r\n        <button type=\"button\" class=\"close pull-right\" (click)=\"confirm.hide()\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>{{bodyDeletarEvento}}</p>\r\n      </div>\r\n      <div class=\"modal-footer btn-group d-flex\">\r\n        <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"confirm.hide()\">\r\n          CENCELAR\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"confirmeDelete(confirm)\">\r\n          DELETAR\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(public authService: AuthService\n    , public router: Router\n    , private toastr: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  showMenu() {\n    return this.router.url !== '/user/login';\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  entrar() {\n    this.router.navigate(['/user/login']);\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.toastr.show('Log Out');\n    this.router.navigate(['/user/login']);\n  }\n\n  userName() {\n    return sessionStorage.getItem('username');\n  }\n}","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\" *ngIf=\"showMenu()\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"dashboard\">ProAgil</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n      aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div *ngIf=\"loggedIn()\" class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"eventos\">Eventos</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"palestrantes\">Palestrantes</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"contatos\">Contatos</a>\n        </li>\n      </ul>\n    </div>\n\n    <ul *ngIf=\"loggedIn()\" class=\"navbar-nav\">\n      <li class=\"nav-item dropdown\" dropdown>\n        <a dropdownToggle class=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\"\n          aria-haspopup=\"true\" aria-expanded=\"false\" style=\"cursor: pointer; text-transform: capitalize;\">\n          {{userName()}}\n        </a>\n        <div *dropdownMenu class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n          <a class=\"dropdown-item\">\n            Perfil\n          </a>\n          <div role=\"separator\" class=\"divider\"></div>\n          <a class=\"dropdown-item\" (click)=\"logout()\" style=\"cursor: pointer\">\n            Sair\n          </a>\n        </div>\n      </li>\n    </ul>\n\n    <button *ngIf=\"!loggedIn()\" class=\"btn btn-success\" (click)=\"entrar()\">Entrar</button>\n\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-palestrantes',\n  templateUrl: './palestrantes.component.html',\n  styleUrls: ['./palestrantes.component.css']\n})\nexport class PalestrantesComponent implements OnInit {\n  titulo = 'Palestrantes';\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-titulo [titulo]=\"titulo\"></app-titulo>\n<p>\n  palestrantes works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  titulo = 'Login';\n  model: any = {};\n\n  constructor(private authService: AuthService\n    , public router: Router\n    , private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  login() {\n    this.authService.login(this.model)\n      .subscribe(\n        () => {\n          this.router.navigate(['/dashboard']);\n          this.toastr.success('Logado com Sucesso');\n        },\n        error => {\n          this.toastr.error('Falha ao tentar Logar');\n        }\n      );\n  }\n\n}\n","<app-titulo [titulo]=\"titulo\"></app-titulo>\n\n<body class=\"text-center\" data-gr-c-s-loaded=\"true\">\n  <form class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login()\">\n    <img class=\"mb-4\" src=\"\" alt=\"\" width=\"72\" height=\"72\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Por favor</h1>\n    <label for=\"username\" class=\"sr-only\">Usuário</label>\n    <input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\" name=\"username\" required\n      [(ngModel)]=\"model.username\">\n    <label for=\"password\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" name=\"password\" required\n      [(ngModel)]=\"model.password\">\n    <!--div class=\"checkbox mb-3\">\n      <label>\n        <input type=\"checkbox\" value=\"remember-me\"> Remember me\n      </label>\n    </div-->\n    <button [disabled]=\"!loginForm.valid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Entrar</button>\n    <p class=\"mt-5 mb-3 text-muted\">Não tem login? Cadastre-se abaixo</p>\n    <button class=\"btn btn-lg btn-link btn-block\" (click)=\"router.navigate(['/user/registration'])\">Quero me\n      cadastrar</button>\n  </form>\n\n</body>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/_models/User';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  registerForm: FormGroup;\n  user: User;\n\n  constructor(private authService: AuthService\n    , public router: Router\n    , public fb: FormBuilder\n    , private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n    this.validation();\n  }\n\n  validation() {\n    this.registerForm = this.fb.group({\n      fullName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', Validators.required],\n      passwords: this.fb.group({\n        password: ['', [Validators.required, Validators.minLength(4)]],\n        confirmPassword: ['', Validators.required]\n      }, { validator: this.compararSenhas })\n    });\n  }\n\n  compararSenhas(fb: FormGroup) {\n    const confirmSenhaCtrl = fb.get('confirmPassword');\n    if (confirmSenhaCtrl.errors == null || 'mismatch' in confirmSenhaCtrl.errors) {\n      if (fb.get('password').value !== confirmSenhaCtrl.value) {\n        confirmSenhaCtrl.setErrors({ mismatch: true });\n      } else {\n        confirmSenhaCtrl.setErrors(null);\n      }\n    }\n  }\n\n  cadastrarUsuario() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign(\n        { password: this.registerForm.get('passwords.password').value },\n        this.registerForm.value);\n      this.authService.register(this.user).subscribe(\n        () => {\n          this.router.navigate(['/user/login']);\n          this.toastr.success('Cadastro Realizado');\n        }, error => {\n          const erro = error.error;\n          erro.forEach(element => {\n            switch (element.code) {\n              case 'DuplicateUserName':\n                this.toastr.error('Cadastro Duplicado!');\n                break;\n              default:\n                this.toastr.error(`Erro no Cadatro! CODE: ${element.code}`);\n                break;\n            }\n          });\n        }\n\n      );\n    }\n  }\n\n}","<div class=\"row mt-4\">\n  <div class=\"col-md-6\" style=\"height: 450px;\">\n    <div class=\"row col-md-12 my-auto side-heder\">\n      <h1>Cadastro de Usuário</h1>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <form [formGroup]=\"registerForm\">\n      <div class=\"form-group required\">\n        <label for=\"\">Nome Completo:</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"fullName\" [ngClass]=\"{'is-invalid': registerForm.get('fullName').errors &&\n                                  registerForm.get('fullName').touched }\" placeholder=\"Insira o Nome Completo\" />\n        <div *ngIf=\"registerForm.get('fullName').hasError('required') &&\n                    registerForm.get('fullName').touched\" class=\"invalid-feedback\">\n          Nome Completo é obrigatório.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Email:</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': registerForm.get('email').errors && \n                                     registerForm.get('email').touched}\" placeholder=\"Insira o Nome Completo\" />\n        <div *ngIf=\"registerForm.get('email').hasError('required') &&\n                    registerForm.get('email').touched\" class=\"invalid-feedback\">\n          email é obrigatório.\n        </div>\n        <div *ngIf=\"registerForm.get('email').hasError('email')\n        && registerForm.get('email').touched\" class=\"invalid-feedback\">\n          Deve ser um e-mail válido.\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"\">Usuario:</label>\n        <input class=\"form-control\" type=\"text\" formControlName=\"userName\" [ngClass]=\"{'is-invalid': registerForm.get('userName').errors &&\n                                    registerForm.get('userName').touched}\" placeholder=\"Insira o nome de Usuário\" />\n        <div *ngIf=\"registerForm.get('userName').hasError('required') &&\n                    registerForm.get('userName').touched\" class=\"invalid-feedback\">\n          Usuário é obrigatório.\n        </div>\n      </div>\n      <div formGroupName=\"passwords\">\n        <div class=\"form-group\">\n          <label for=\"\">Senha:</label>\n          <input class=\"form-control\" type=\"password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.password').errors &&\n                                       registerForm.get('passwords.password').touched}\"\n            placeholder=\"Digite uma Senha\" />\n          <div *ngIf=\"registerForm.get('passwords.password').hasError('minlength') &&\n            registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\n            Deve conter no mínimo 4 caracters\n          </div>\n          <div *ngIf=\"registerForm.get('passwords.password').hasError('required') &&\n                      registerForm.get('passwords.password').touched\" class=\"invalid-feedback\">\n            Senha é obrigatório.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"\">Confirmar Senha:</label>\n          <input class=\"form-control\" type=\"password\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': registerForm.get('passwords.confirmPassword').errors \n                         && registerForm.get('passwords.confirmPassword').touched \n                         ||registerForm.get('passwords.confirmPassword').hasError('mismatch') \n                         && registerForm.get('passwords.confirmPassword').touched }\" placeholder=\"Confirme a Senha\" />\n          <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('required') &&\n                      registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\n            Confirme a Senha\n          </div>\n          <div *ngIf=\"registerForm.get('passwords.confirmPassword').hasError('mismatch') \n                      && registerForm.get('passwords.confirmPassword').touched\" class=\"invalid-feedback\">\n            Confirmação não confere\n          </div>\n        </div>\n      </div>\n      <div class=\"form-row\">\n        <div class=\"form-group col-md-8 offset-md-2\">\n          <button class=\"btn btn-lg btn-success btn-block\" [disabled]=\"!registerForm.valid\"\n            (click)=\"cadastrarUsuario()\">Registar</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"col-md-8 offset-md-2\">\n    <router-outlet></router-outlet>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}